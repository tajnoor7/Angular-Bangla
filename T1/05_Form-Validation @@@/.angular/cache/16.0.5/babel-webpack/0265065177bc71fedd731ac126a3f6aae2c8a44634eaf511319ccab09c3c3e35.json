{"ast":null,"code":"// for =>   \"admin\"\nexport function forbiddenNameValidator(forbiddenName) {\n  return control => {\n    const forbidden = forbiddenName.test(control.value);\n    return forbidden ? {\n      'forbiddenName': {\n        value: control.value\n      }\n    } : null;\n  };\n}\n//  // for =>  \"Admin\"\n//  export function forbiddenNameValidator2(forbiddenName: RegExp): ValidatorFn{\n//   return (control: AbstractControl): { [key: string]: any } | null => {\n//   const forbidden = forbiddenName.test(control.value);\n//   return forbidden ? { 'forbiddenName': { value: control.value } } : null;\n//   };\n// }\n// for =>   \"user\"\nexport function forbiddenNameValidator3(forbiddenName) {\n  return control => {\n    const forbidden = forbiddenName.test(control.value);\n    return forbidden ? {\n      'forbiddenName': {\n        value: control.value\n      }\n    } : null;\n  };\n}\n//  // for =>  \"Admin\"\n//  export function forbiddenNameValidator4(forbiddenName: RegExp): ValidatorFn{\n//   return (control: AbstractControl): { [key: string]: any } | null => {\n//   const forbidden = forbiddenName.test(control.value);\n//   return forbidden ? { 'forbiddenName': { value: control.value } } : null;\n//   };\n// }","map":{"version":3,"names":["forbiddenNameValidator","forbiddenName","control","forbidden","test","value","forbiddenNameValidator3"],"sources":["/Users/sabbir/Desktop/git/Angular-Bangla/T1/05_Form-Validation @@@/src/app/Custom-Validator/userName.validators.ts"],"sourcesContent":["import { AbstractControl, ValidatorFn } from \"@angular/forms\";\n\n\n// for =>   \"admin\"\nexport function forbiddenNameValidator(forbiddenName: RegExp): ValidatorFn{\n    return (control: AbstractControl): { [key: string]: any } | null => {\n    const forbidden = forbiddenName.test(control.value);\n    return forbidden ? { 'forbiddenName': { value: control.value } } : null;\n    };\n }\n\n\n//  // for =>  \"Admin\"\n//  export function forbiddenNameValidator2(forbiddenName: RegExp): ValidatorFn{\n//   return (control: AbstractControl): { [key: string]: any } | null => {\n//   const forbidden = forbiddenName.test(control.value);\n//   return forbidden ? { 'forbiddenName': { value: control.value } } : null;\n//   };\n// }\n\n\n\n\n// for =>   \"user\"\nexport function forbiddenNameValidator3(forbiddenName: RegExp): ValidatorFn{\n    return (control: AbstractControl): { [key: string]: any } | null => {\n    const forbidden = forbiddenName.test(control.value);\n    return forbidden ? { 'forbiddenName': { value: control.value } } : null;\n    };\n }\n\n\n//  // for =>  \"Admin\"\n//  export function forbiddenNameValidator4(forbiddenName: RegExp): ValidatorFn{\n//   return (control: AbstractControl): { [key: string]: any } | null => {\n//   const forbidden = forbiddenName.test(control.value);\n//   return forbidden ? { 'forbiddenName': { value: control.value } } : null;\n//   };\n// }"],"mappings":"AAGA;AACA,OAAM,SAAUA,sBAAsBA,CAACC,aAAqB;EACxD,OAAQC,OAAwB,IAAmC;IACnE,MAAMC,SAAS,GAAGF,aAAa,CAACG,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC;IACnD,OAAOF,SAAS,GAAG;MAAE,eAAe,EAAE;QAAEE,KAAK,EAAEH,OAAO,CAACG;MAAK;IAAE,CAAE,GAAG,IAAI;EACvE,CAAC;AACJ;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA,OAAM,SAAUC,uBAAuBA,CAACL,aAAqB;EACzD,OAAQC,OAAwB,IAAmC;IACnE,MAAMC,SAAS,GAAGF,aAAa,CAACG,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC;IACnD,OAAOF,SAAS,GAAG;MAAE,eAAe,EAAE;QAAEE,KAAK,EAAEH,OAAO,CAACG;MAAK;IAAE,CAAE,GAAG,IAAI;EACvE,CAAC;AACJ;AAGD;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}