{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst _c0 = function () {\n  return [\"/s\"];\n};\n// Password-ConfirmPassword mismached fn()\nfunction matchPasswordValidator(passwordKey) {\n  return control => {\n    const password = control.root.get(passwordKey);\n    const confirmPassword = control.value;\n    if (password && confirmPassword !== password.value) {\n      return {\n        'passwordMismatch': true\n      };\n    }\n    return null;\n  };\n}\nclass FirstComponent {\n  constructor() {\n    //User name Validators for \"First Name\" & \"Last Name\"\n    this.nameValidators = [Validators.required, Validators.minLength(3), Validators.maxLength(30)];\n    //Password Validators for \"Password\" & \"Confirm Password\"\n    this.passwordValidators = [Validators.required, Validators.minLength(8), Validators.maxLength(30), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')];\n    this.user = {};\n    this.myForm = new FormGroup({\n      firstName: new FormControl(this.user.firstName, this.nameValidators),\n      lastName: new FormControl(this.user.lastName, this.nameValidators),\n      email: new FormControl(this.user.email, [Validators.required, Validators.email]),\n      password: new FormControl(this.user.password, this.passwordValidators),\n      confirmPassword: new FormControl(this.user.confirmPassword, [...this.passwordValidators, matchPasswordValidator('password') // Add custom validator to check for password match\n      ])\n    });\n  }\n\n  ngOnInit() {}\n  //get method\n  get firstName() {\n    return this.myForm.get('firstName');\n  }\n  get lastName() {\n    return this.myForm.get('lastName');\n  }\n  get email() {\n    return this.myForm.get('email');\n  }\n  get password() {\n    return this.myForm.get('password');\n  }\n  get confirmPassword() {\n    return this.myForm.get('confirmPassword');\n  }\n  //for Submit button\n  onSubmit() {\n    console.log(this.myForm.value);\n  }\n}\nFirstComponent.ɵfac = function FirstComponent_Factory(t) {\n  return new (t || FirstComponent)();\n};\nFirstComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FirstComponent,\n  selectors: [[\"first-root\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[2, \"text-align\", \"center\"], [3, \"routerLink\"]],\n  template: function FirstComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"router-outlet\");\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \"Templete Driven Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\");\n      i0.ɵɵelementStart(4, \"div\", 0)(5, \"button\", 1);\n      i0.ɵɵtext(6, \"Go to Reactive Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\")(8, \"br\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c0));\n    }\n  },\n  dependencies: [i1.RouterOutlet, i1.RouterLink],\n  styles: [\"h1[_ngcontent-%COMP%]{\\n    text-align: center;\\n    color: rgb(9, 162, 62);\\n    font-weight: bolder;\\n    font-size: 3rem;\\n}\\n\\nbutton[_ngcontent-%COMP%]{\\n    color: rgb(255, 255, 255);\\n    width: 250px;\\n    height: 40px;\\n    font-weight:bolder;\\n    background-color: rgb(102, 76, 205);\\n    border-radius: 30px;\\n}\\nbutton[_ngcontent-%COMP%]:hover{\\n    background-color: rgb(153, 135, 225);\\n}\\n\\n#firstChild[_ngcontent-%COMP%]{\\n    color: rgb(24, 24, 24);\\n    background-color: bisque;\\n    margin: 1rem;\\n    width: 93px;\\n    height: 30px;\\n}\\n#firstChild[_ngcontent-%COMP%]:hover {\\n    color: rgb(79, 75, 75);\\n    background-color: rgb(244, 195, 136);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmlyc3QvZmlyc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixlQUFlO0FBQ25COztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLG1DQUFtQztJQUNuQyxtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0Qix3QkFBd0I7SUFDeEIsWUFBWTtJQUNaLFdBQVc7SUFDWCxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxzQkFBc0I7SUFDdEIsb0NBQW9DO0FBQ3hDIiwic291cmNlc0NvbnRlbnQiOlsiXG5oMXtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6IHJnYig5LCAxNjIsIDYyKTtcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbn1cblxuYnV0dG9ue1xuICAgIGNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBmb250LXdlaWdodDpib2xkZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwMiwgNzYsIDIwNSk7XG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcbn1cbmJ1dHRvbjpob3ZlcntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTUzLCAxMzUsIDIyNSk7XG59XG5cbiNmaXJzdENoaWxke1xuICAgIGNvbG9yOiByZ2IoMjQsIDI0LCAyNCk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmlzcXVlO1xuICAgIG1hcmdpbjogMXJlbTtcbiAgICB3aWR0aDogOTNweDtcbiAgICBoZWlnaHQ6IDMwcHg7XG59XG4jZmlyc3RDaGlsZDpob3ZlciB7XG4gICAgY29sb3I6IHJnYig3OSwgNzUsIDc1KTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ0LCAxOTUsIDEzNik7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FirstComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","matchPasswordValidator","passwordKey","control","password","root","get","confirmPassword","value","FirstComponent","constructor","nameValidators","required","minLength","maxLength","passwordValidators","pattern","user","myForm","firstName","lastName","email","ngOnInit","onSubmit","console","log","selectors","decls","vars","consts","template","FirstComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["/Users/sabbir/Desktop/git/Angular-Bangla/05_Form-Validation @@@/src/app/first/first.component.ts","/Users/sabbir/Desktop/git/Angular-Bangla/05_Form-Validation @@@/src/app/first/first.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\n// Password-ConfirmPassword mismached fn()\nfunction matchPasswordValidator(passwordKey: string): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const password = control.root.get(passwordKey);\n    const confirmPassword = control.value;\n    if (password && confirmPassword !== password.value) {\n      return { 'passwordMismatch': true };\n    }\n    return null;\n  };\n}\n\n@Component({\n  selector: 'first-root',\n  templateUrl: './first.component.html',\n  styleUrls: ['./first.component.css']\n})\n\n\nexport class FirstComponent implements OnInit {\n  user: User;\n\n\n  //User name Validators for \"First Name\" & \"Last Name\"\n  nameValidators = [\n    Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(30)\n  ];\n\n  //Password Validators for \"Password\" & \"Confirm Password\"\n  passwordValidators = [\n    Validators.required,\n    Validators.minLength(8),\n    Validators.maxLength(30),\n    Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n  ];\n\n  constructor() {\n    this.user = {} as User;\n    this.myForm = new FormGroup({\n      firstName: new FormControl(this.user.firstName, this.nameValidators),\n      lastName: new FormControl(this.user.lastName, this.nameValidators),\n      email: new FormControl(this.user.email, [Validators.required, Validators.email]),\n      password: new FormControl(this.user.password, this.passwordValidators),\n      confirmPassword: new FormControl(this.user.confirmPassword, [\n        ...this.passwordValidators,\n        matchPasswordValidator('password') // Add custom validator to check for password match\n      ])\n    });\n  }\n\n\n  ngOnInit(): void {}\n\n  \n  // Form\n  myForm: FormGroup;\n\n\n  //get method\n  get firstName() {\n    return this.myForm.get('firstName');\n  }\n  get lastName() {\n    return this.myForm.get('lastName');\n  }\n  get email() {\n    return this.myForm.get('email');\n  }\n  get password() {\n    return this.myForm.get('password');\n  }\n  get confirmPassword() {\n    return this.myForm.get('confirmPassword');\n  }\n\n  //for Submit button\n  onSubmit() {\n    console.log(this.myForm.value);\n  }\n}","\n<router-outlet></router-outlet>\n\n\n\n<h1>Templete Driven Form</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<br>\n<div style=\"text-align: center;\">\n    <button [routerLink]=\"['/s']\">Go to Reactive Form</button>\n<br>\n<br>\n<!-- <button [routerLink]=\"['child-fa']\" id=\"firstChild\">Child A</button>\n<button [routerLink]=\"['child-fb']\" id=\"firstChild\">Child B</button> -->\n</div>\n\n\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAsC,gBAAgB;;;;;;AAUjG;AACA,SAASC,sBAAsBA,CAACC,WAAmB;EACjD,OAAQC,OAAwB,IAAmC;IACjE,MAAMC,QAAQ,GAAGD,OAAO,CAACE,IAAI,CAACC,GAAG,CAACJ,WAAW,CAAC;IAC9C,MAAMK,eAAe,GAAGJ,OAAO,CAACK,KAAK;IACrC,IAAIJ,QAAQ,IAAIG,eAAe,KAAKH,QAAQ,CAACI,KAAK,EAAE;MAClD,OAAO;QAAE,kBAAkB,EAAE;MAAI,CAAE;;IAErC,OAAO,IAAI;EACb,CAAC;AACH;AAEA,MAOaC,cAAc;EAmBzBC,YAAA;IAfA;IACA,KAAAC,cAAc,GAAG,CACfX,UAAU,CAACY,QAAQ,EACnBZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EACvBb,UAAU,CAACc,SAAS,CAAC,EAAE,CAAC,CACzB;IAED;IACA,KAAAC,kBAAkB,GAAG,CACnBf,UAAU,CAACY,QAAQ,EACnBZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EACvBb,UAAU,CAACc,SAAS,CAAC,EAAE,CAAC,EACxBd,UAAU,CAACgB,OAAO,CAAC,iDAAiD,CAAC,CACtE;IAGC,IAAI,CAACC,IAAI,GAAG,EAAU;IACtB,IAAI,CAACC,MAAM,GAAG,IAAInB,SAAS,CAAC;MAC1BoB,SAAS,EAAE,IAAIrB,WAAW,CAAC,IAAI,CAACmB,IAAI,CAACE,SAAS,EAAE,IAAI,CAACR,cAAc,CAAC;MACpES,QAAQ,EAAE,IAAItB,WAAW,CAAC,IAAI,CAACmB,IAAI,CAACG,QAAQ,EAAE,IAAI,CAACT,cAAc,CAAC;MAClEU,KAAK,EAAE,IAAIvB,WAAW,CAAC,IAAI,CAACmB,IAAI,CAACI,KAAK,EAAE,CAACrB,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACqB,KAAK,CAAC,CAAC;MAChFjB,QAAQ,EAAE,IAAIN,WAAW,CAAC,IAAI,CAACmB,IAAI,CAACb,QAAQ,EAAE,IAAI,CAACW,kBAAkB,CAAC;MACtER,eAAe,EAAE,IAAIT,WAAW,CAAC,IAAI,CAACmB,IAAI,CAACV,eAAe,EAAE,CAC1D,GAAG,IAAI,CAACQ,kBAAkB,EAC1Bd,sBAAsB,CAAC,UAAU,CAAC,CAAC;MAAA,CACpC;KACF,CAAC;EACJ;;EAGAqB,QAAQA,CAAA,GAAU;EAOlB;EACA,IAAIH,SAASA,CAAA;IACX,OAAO,IAAI,CAACD,MAAM,CAACZ,GAAG,CAAC,WAAW,CAAC;EACrC;EACA,IAAIc,QAAQA,CAAA;IACV,OAAO,IAAI,CAACF,MAAM,CAACZ,GAAG,CAAC,UAAU,CAAC;EACpC;EACA,IAAIe,KAAKA,CAAA;IACP,OAAO,IAAI,CAACH,MAAM,CAACZ,GAAG,CAAC,OAAO,CAAC;EACjC;EACA,IAAIF,QAAQA,CAAA;IACV,OAAO,IAAI,CAACc,MAAM,CAACZ,GAAG,CAAC,UAAU,CAAC;EACpC;EACA,IAAIC,eAAeA,CAAA;IACjB,OAAO,IAAI,CAACW,MAAM,CAACZ,GAAG,CAAC,iBAAiB,CAAC;EAC3C;EAEA;EACAiB,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,MAAM,CAACV,KAAK,CAAC;EAChC;;AA7DWC,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;QAAdA,cAAc;EAAAiB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MC7B3BE,EAAA,CAAAC,SAAA,oBAA+B;MAI/BD,EAAA,CAAAE,cAAA,SAAI;MAAAF,EAAA,CAAAG,MAAA,2BAAoB;MAAAH,EAAA,CAAAI,YAAA,EAAK;MAiB7BJ,EAAA,CAAAC,SAAA,SAAI;MACJD,EAAA,CAAAE,cAAA,aAAiC;MACCF,EAAA,CAAAG,MAAA,0BAAmB;MAAAH,EAAA,CAAAI,YAAA,EAAS;MAC9DJ,EAAA,CAAAC,SAAA,SAAI;MAIJD,EAAA,CAAAI,YAAA,EAAM;;;MALMJ,EAAA,CAAAK,SAAA,GAAqB;MAArBL,EAAA,CAAAM,UAAA,eAAAN,EAAA,CAAAO,eAAA,IAAAC,GAAA,EAAqB;;;;;;SDMpBjC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}